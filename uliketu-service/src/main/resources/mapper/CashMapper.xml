<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hengsu.uliketu.core.repository.CashRepository" >
  <resultMap id="BaseResultMap" type="com.hengsu.uliketu.core.entity.Cash" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="userId" property="userid" jdbcType="BIGINT" />
    <result column="balance" property="balance" jdbcType="DOUBLE" />
    <result column="money" property="money" jdbcType="DOUBLE" />
    <result column="rate" property="rate" jdbcType="DOUBLE" />
    <result column="poundage" property="poundage" jdbcType="DOUBLE" />
    <result column="apply_time" property="applyTime" jdbcType="TIMESTAMP" />
    <result column="finish_time" property="finishTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, userId, balance, money, rate, poundage, apply_time, finish_time, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from cash
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from cash
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hengsu.uliketu.core.entity.Cash" >
    insert into cash (id, userId, balance, 
      money, rate, poundage, 
      apply_time, finish_time, status
      )
    values (#{id,jdbcType=BIGINT}, #{userid,jdbcType=BIGINT}, #{balance,jdbcType=DOUBLE}, 
      #{money,jdbcType=DOUBLE}, #{rate,jdbcType=DOUBLE}, #{poundage,jdbcType=DOUBLE}, 
      #{applyTime,jdbcType=TIMESTAMP}, #{finishTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hengsu.uliketu.core.entity.Cash" >
    insert into cash
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="rate != null" >
        rate,
      </if>
      <if test="poundage != null" >
        poundage,
      </if>
      <if test="applyTime != null" >
        apply_time,
      </if>
      <if test="finishTime != null" >
        finish_time,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=DOUBLE},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="rate != null" >
        #{rate,jdbcType=DOUBLE},
      </if>
      <if test="poundage != null" >
        #{poundage,jdbcType=DOUBLE},
      </if>
      <if test="applyTime != null" >
        #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null" >
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hengsu.uliketu.core.entity.Cash" >
    update cash
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=BIGINT},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=DOUBLE},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="rate != null" >
        rate = #{rate,jdbcType=DOUBLE},
      </if>
      <if test="poundage != null" >
        poundage = #{poundage,jdbcType=DOUBLE},
      </if>
      <if test="applyTime != null" >
        apply_time = #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null" >
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hengsu.uliketu.core.entity.Cash" >
    update cash
    set userId = #{userid,jdbcType=BIGINT},
      balance = #{balance,jdbcType=DOUBLE},
      money = #{money,jdbcType=DOUBLE},
      rate = #{rate,jdbcType=DOUBLE},
      poundage = #{poundage,jdbcType=DOUBLE},
      apply_time = #{applyTime,jdbcType=TIMESTAMP},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectCount" resultType="java.lang.Integer" parameterType="com.hengsu.uliketu.core.entity.Cash" >
    select count(*) from cash
    <where >
      <if test="id != null" >
        and id = #{id,jdbcType=BIGINT}
      </if>
      <if test="userid != null" >
        and userId = #{userid,jdbcType=BIGINT}
      </if>
      <if test="balance != null" >
        and balance = #{balance,jdbcType=DOUBLE}
      </if>
      <if test="money != null" >
        and money = #{money,jdbcType=DOUBLE}
      </if>
      <if test="rate != null" >
        and rate = #{rate,jdbcType=DOUBLE}
      </if>
      <if test="poundage != null" >
        and poundage = #{poundage,jdbcType=DOUBLE}
      </if>
      <if test="applyTime != null" >
        and apply_time = #{applyTime,jdbcType=TIMESTAMP}
      </if>
      <if test="finishTime != null" >
        and finish_time = #{finishTime,jdbcType=TIMESTAMP}
      </if>
      <if test="status != null" >
        and status = #{status,jdbcType=INTEGER}
      </if>
    </where>
  </select>
  <select id="selectPage" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from cash where 1 = 1 
    <if test="param1.id != null" >
      and id = #{param1.id,jdbcType=BIGINT}
    </if>
    <if test="param1.userid != null" >
      and userId = #{param1.userid,jdbcType=BIGINT}
    </if>
    <if test="param1.balance != null" >
      and balance = #{param1.balance,jdbcType=DOUBLE}
    </if>
    <if test="param1.money != null" >
      and money = #{param1.money,jdbcType=DOUBLE}
    </if>
    <if test="param1.rate != null" >
      and rate = #{param1.rate,jdbcType=DOUBLE}
    </if>
    <if test="param1.poundage != null" >
      and poundage = #{param1.poundage,jdbcType=DOUBLE}
    </if>
    <if test="param1.applyTime != null" >
      and apply_time = #{param1.applyTime,jdbcType=TIMESTAMP}
    </if>
    <if test="param1.finishTime != null" >
      and finish_time = #{param1.finishTime,jdbcType=TIMESTAMP}
    </if>
    <if test="param1.status != null" >
      and status = #{param1.status,jdbcType=INTEGER}
    </if>
    <if test="param2.sort != null" >
      order by 
      <foreach collection="param2.sort" item="order" separator="," >
        ${order.property} ${order.direction}
      </foreach>
    </if>
    <if test="param2.offset >= 0 and param2.pageSize > 0" >
      limit ${param2.offset}, ${param2.pageSize}
    </if>
  </select>
</mapper>