<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hengsu.uliketu.core.repository.StatementRepository" >
  <resultMap id="BaseResultMap" type="com.hengsu.uliketu.core.entity.Statement" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="BIGINT" />
    <result column="num" property="num" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, userId, num, create_time, type, description
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from statement
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from statement
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hengsu.uliketu.core.entity.Statement" >
    insert into statement (id, userId, num, 
      create_time, type, description
      )
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=BIGINT}, #{num,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{type,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hengsu.uliketu.core.entity.Statement" >
    insert into statement
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="num != null" >
        #{num,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hengsu.uliketu.core.entity.Statement" >
    update statement
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=BIGINT},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hengsu.uliketu.core.entity.Statement" >
    update statement
    set userId = #{userid,jdbcType=BIGINT},
      num = #{num,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectCount" resultType="java.lang.Integer" parameterType="com.hengsu.uliketu.core.entity.Statement" >
    select count(*) from statement
    <where >
      <if test="id != null" >
        and id = #{id,jdbcType=INTEGER}
      </if>
      <if test="userid != null" >
        and userId = #{userid,jdbcType=BIGINT}
      </if>
      <if test="num != null" >
        and num = #{num,jdbcType=BIGINT}
      </if>
      <if test="createTime != null" >
        and create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="type != null" >
        and type = #{type,jdbcType=INTEGER}
      </if>
      <if test="description != null" >
        and description = #{description,jdbcType=VARCHAR}
      </if>
    </where>
  </select>
  <select id="selectPage" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from statement where 1 = 1 
    <if test="param1.id != null" >
      and id = #{param1.id,jdbcType=INTEGER}
    </if>
    <if test="param1.userid != null" >
      and userId = #{param1.userid,jdbcType=BIGINT}
    </if>
    <if test="param1.num != null" >
      and num = #{param1.num,jdbcType=BIGINT}
    </if>
    <if test="param1.createTime != null" >
      and create_time = #{param1.createTime,jdbcType=TIMESTAMP}
    </if>
    <if test="param1.type != null" >
      and type = #{param1.type,jdbcType=INTEGER}
    </if>
    <if test="param1.description != null" >
      and description = #{param1.description,jdbcType=VARCHAR}
    </if>
    <if test="param2.sort != null" >
      order by 
      <foreach collection="param2.sort" item="order" separator="," >
        ${order.property} ${order.direction}
      </foreach>
    </if>
    <if test="param2.offset >= 0 and param2.pageSize > 0" >
      limit ${param2.offset}, ${param2.pageSize}
    </if>
  </select>
</mapper>